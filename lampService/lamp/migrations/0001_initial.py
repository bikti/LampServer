# Generated by Django 5.2.6 on 2025-09-03 18:45

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brightness', models.IntegerField(default=100, help_text='Настройка якрости устройства', verbose_name=' Яркость')),
                ('сolor', models.CharField(help_text='Цвет для освещения', max_length=10, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Цвет')),
                ('count_led', models.IntegerField(default=1, help_text='оличество светодиодов', verbose_name='Количество светодиодов')),
            ],
            options={
                'verbose_name': 'DeviceSetting',
                'verbose_name_plural': 'DeviceSettings',
            },
        ),
        migrations.CreateModel(
            name='DeviceOld',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название устройства', max_length=100, verbose_name='Device Name')),
                ('model', models.CharField(help_text='Модель устройства', max_length=100, verbose_name='Device Model')),
                ('serial_number', models.CharField(db_index=True, help_text='Серийный номер устройства', max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Serial Number')),
                ('device_type', models.CharField(choices=[('lamp', 'Lamp'), ('sensor', 'Sensor'), ('switch', 'Switch'), ('controller', 'Controller'), ('other', 'Other')], default='other', help_text='Тип устройства', max_length=20, verbose_name='Device Type')),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('error', 'Error'), ('maintenance', 'Maintenance')], default='offline', help_text='Текущий статус устройства', max_length=20, verbose_name='Status')),
                ('firmware_version', models.CharField(blank=True, help_text='Версия прошивки', max_length=50, null=True, verbose_name='Firmware Version')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP адрес устройства', null=True, verbose_name='IP Address')),
                ('mqtt_topic', models.CharField(help_text='Топик MQTT для устройства', max_length=200, verbose_name='MQTT Topic')),
                ('last_message_received', models.DateTimeField(blank=True, help_text='Время получения последнего сообщения', null=True, verbose_name='Last Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Время создания записи', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Время последнего обновления', verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, help_text='Активно ли устройство', verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['serial_number'], name='lamp_device_serial__484da3_idx'), models.Index(fields=['status'], name='lamp_device_status_61b990_idx'), models.Index(fields=['device_type'], name='lamp_device_device__766e03_idx')],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название устройства', max_length=100, verbose_name='Device Name')),
                ('model', models.CharField(help_text='Модель устройства', max_length=100, verbose_name='Device Model')),
                ('serial_number', models.CharField(db_index=True, help_text='Серийный номер устройства', max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Serial Number')),
                ('is_init', models.BooleanField(default=True, help_text='Инициализировано ли конкретное устройство', verbose_name='Is Init')),
                ('setting_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lamp.devicesettings')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'indexes': [models.Index(fields=['serial_number'], name='lamp_device_serial__152f5e_idx'), models.Index(fields=['is_init'], name='lamp_device_is_init_9a2602_idx')],
            },
        ),
    ]
